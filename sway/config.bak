# vim: ft=conf

### VARIABLES
# Font


# Background image
set $background doom.jpg

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal + Rofi
set $term tilix
set $dmenu rofi -no-lazy-grab  -show drun -theme /home/dkivenko/.config/rofi/themes/style_normal_rainbow.rasi | xargs swaymsg exec 

# Background
output HDMI-A-1 bg ~/Pictures/$background fill
output eDP-1 bg ~/Pictures/$background fill
output DP-2 bg ~/Pictures/doom.png fill

## init wob
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob -a bottom

### Include theme
#
    include themes/manjaro

# Brightness control
bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob


# Volume control
bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob

# Keyboard control

bindsym XF86KbdBrightnessUp exec light -s sysfs/leds/tpacpi::kbd_backlight -A 50 && light -s sysfs/leds/tpacpi::kbd_backlight | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym XF86KbdBrightnessDown exec light -s sysfs/leds/tpacpi::kbd_backlight -U 50 && light -s sysfs/leds/tpacpi::kbd_backlight | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym XF86KbdLightOnOff exec light -s sysfs/leds/tpacpi::kbd_backlight -U 100
# Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 305 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
set $lock_bg ~/Pictures/doomlock.jpg

bindsym $mod+m exec swaylock -i $lock_bg

exec swayidle -w \
         timeout 600 'swaylock -f -c 000000 -i $lock_bg' \
         timeout 900 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000 -i $lock_bg'

# Lock screen

# Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "1739:0:Synaptics_TM3288-011" {
	natural_scroll disabled
	tap enabled
	#Clickfinger works even if this is enabled
  #click_method button_areas
	click_method clickfinger
	accel_profile adaptive
	dwt enabled
	#dwt disabled
  drag enabled
	drag_lock enabled
}	

input 1133:16495:Logitech_MX_Ergo {

}
### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+q kill

    # start your launcher
    bindsym $mod+Tab exec $dmenu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Load waybar
bar {
    swaybar_command waybar
    font "Droid Sans Mono 10"
}

# System Mode
set $mode_system System
mode "$mode_system" {
  bindsym e exec swaymsg exit, mode "default"
  bindsym s exec systemctl poweroff, mode "default"
  bindsym r exec systemctl reboot, mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym Space mode "default"
}
bindsym $mod+Delete mode "$mode_system"

# Screenshots
set $screenselect slurp
set $screenshot grim -
set $clipboard wl-copy
bindsym $mod+p exec grim  | wl-copy
bindsym $mod+c exec   grim -g "$(slurp)" - | wl-copy

# Set cursor theme
seat seat0 xcursor_theme Quintom_Snow

#Disaply0 config 
output eDP-1 {
 resolution 2560x1440
 scale 1.5
}
#Display1 config
ouTput HDMI-A-1 {
 resolution 2560x1440
 scale 1.25
}
# Display2 config 
output DP-2 {
  resolution 2560x1440
  scale 1.25
  transform 270
}
# Clamshell Mode
set $laptop eDP-1
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable
#Layout Config
input * xkb_layout "us,ru"
input * xkb_options "grp:caps_toggle"

# needed for temporary/hacked wayland screen sharing
for_window [class=ffplay] floating enable, sticky enable
# TODO modes can be now generated dynamically, see: https://github.com/swaywm/sway/pull/4271
set $mode_adjust "zoom screen sharing: (s)tart; s(t)op; st(a)tus"
bindsym $mod+z mode $mode_adjust
mode $mode_adjust {
	bindsym s exec ~/.files/wayland-screen-share/share-screen.sh start, mode "default"
	bindsym t exec ~/.files/wayland-screen-share/share-screen.sh stop, mode "default"
	bindsym a exec ~/.files/wayland-screen-share/share-screen.sh is-recording, mode "default"

	bindsym Return mode "default"
	bindsym Escape mode "default"
}

#Workspace binding
workspace 2 output DP-2
workspace 3 output HDMI-A-1
# Floating Windows
for_window [app_id=mpv] floating enable
